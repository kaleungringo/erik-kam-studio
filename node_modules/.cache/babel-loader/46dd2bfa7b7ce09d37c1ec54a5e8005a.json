{"ast":null,"code":"import _slicedToArray from \"/Users/kaleunglam/gpt3_kam/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kaleunglam/gpt3_kam/src/components/map/Map.jsx\";\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport './map.css';\nvar containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nvar center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction Map() {\n  var _useJsApiLoader = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"YOUR_API_KEY\"\n  }),\n      isLoaded = _useJsApiLoader.isLoaded;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var onLoad = React.useCallback(function callback(map) {\n    var bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  var onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/kaleunglam/gpt3_kam/src/components/map/Map.jsx"],"names":["React","GoogleMap","useJsApiLoader","containerStyle","width","height","center","lat","lng","Map","id","googleMapsApiKey","isLoaded","useState","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA,OAAO,WAAP;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE,OADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAAvB;AAKE,IAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,KADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,SAASC,GAAT,GAAe;AAAA,wBACQP,cAAc,CAAC;AAClCQ,IAAAA,EAAE,EAAE,mBAD8B;AAElCC,IAAAA,gBAAgB,EAAE;AAFgB,GAAD,CADtB;AAAA,MACLC,QADK,mBACLA,QADK;;AAAA,wBAMSZ,KAAK,CAACa,QAAN,CAAe,IAAf,CANT;AAAA;AAAA,MAMNC,GANM;AAAA,MAMDC,MANC;;AAQb,MAAMC,MAAM,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACtD,QAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAT,IAAAA,GAAG,CAACU,SAAJ,CAAcL,MAAd;AACAJ,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJc,EAIZ,EAJY,CAAf;AAMA,MAAMW,SAAS,GAAGzB,KAAK,CAACiB,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAOH,QAAQ,gBACX,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAET,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEU,MAJV;AAKE,IAAA,SAAS,EAAES,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,yCARF,CADW,gBAWX,yCAXJ;AAYD;;AAED,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport './map.css';\n\nconst containerStyle = {\n    width: '400px',\n    height: '400px'\n  };\n  \n  const center = {\n    lat: -3.745,\n    lng: -38.523\n  };\n  \n  function Map() {\n    const { isLoaded } = useJsApiLoader({\n      id: 'google-map-script',\n      googleMapsApiKey: \"YOUR_API_KEY\"\n    })\n  \n    const [map, setMap] = React.useState(null)\n  \n    const onLoad = React.useCallback(function callback(map) {\n      const bounds = new window.google.maps.LatLngBounds();\n      map.fitBounds(bounds);\n      setMap(map)\n    }, [])\n  \n    const onUnmount = React.useCallback(function callback(map) {\n      setMap(null)\n    }, [])\n  \n    return isLoaded ? (\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={10}\n          onLoad={onLoad}\n          onUnmount={onUnmount}\n        >\n          { /* Child components, such as markers, info windows, etc. */ }\n          <></>\n        </GoogleMap>\n    ) : <></>\n  }\n  \n  export default Map;"]},"metadata":{},"sourceType":"module"}